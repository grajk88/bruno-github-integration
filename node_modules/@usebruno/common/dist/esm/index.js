const t=(e,r="")=>Object.entries(e).reduce(((n,[s,o])=>{const a=r?Array.isArray(e)?`${r}[${s}]`:`${r}.${s}`:s;return"object"==typeof o&&null!==o?Object.assign(n,t(o,a)):n[a]=o,n}),{}),e=(t,r,n=new Set,s=new Map)=>{let o=t,a=!0;for(;a;){const t=/\{\{([^}]+)\}\}/g;a=!1,o=o.replace(t,((o,c)=>{const u=r[c];if(s.has(o))return s.get(o);if(t.test(u)&&!n.has(o)){n.add(o);const t=e(u,r,n,s);return s.set(o,t),a=!0,t}n.add(o);const i=void 0!==u?u:o;return s.set(o,i),a=!0,i}))}return o};var r={interpolate:(r,n)=>{if(!r||"string"!=typeof r||!n||"object"!=typeof n)return r;const s=t(n);return e(r,s)}};export{r as default};
//# sourceMappingURL=index.js.map
